# This file is only used for local development.

version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres-container
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile.dev
    container_name: personalphotomap-backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - "8092:8092"
    networks:
      - app-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile.dev
    container_name: personalphotomap-frontend
    depends_on:
      - backend
    env_file:
      - ./Frontend/.env
    environment:
      VITE_BACKEND_URL: ${VITE_BACKEND_URL}
    ports:
      - "5173:5173"  
    volumes:
      - ./Frontend:/app
      - /app/node_modules  
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
  uploads-data: